{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["GameStateEnum","started","running","lost","won","Object","freeze","GameNumberType","number","selected","this","Trace","props","move","gameState","chosenNumbers","map","n","operator","UndoMove","onClick","className","style","fontSize","color","cursor","Undo","display","Skip","Next","GameButtons","onUndo","onUndoMove","onSkip","onNext","GameState","Operator","onClickOperator","type","Number","btnColor","onClickNumber","Operators","operators","o","key","Numbers","numberKey","numbers","App","random","min","max","Math","floor","init","availableNumbers","push","originalAvailableNumbers","availableOpeartors","state","plusFunction","a","b","minusFunction","multiplyFunction","divisionFunction","mapOperatorToFunction","executeMove","console","log","table","length","number1","number2","removeIndex1","indexOf","splice","removeIndex2","result","setState","chosen","forEach","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bc9d2794.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nconst GameStateEnum = {\n    started: \"started\",\n    running: \"running\",\n    lost: \"lost\",\n    won: \"won\",\n};\nObject.freeze(GameStateEnum);\n\nclass GameNumberType {\n    constructor(number, selected) {\n        this.number = number;\n        this.selected = selected;\n    }\n}\n\nfunction Trace(props) {\n    return (\n        <div> Trace:\n            <div>{props.move.gameState}</div>\n            {\n                props.move.chosenNumbers.map(n => n.number + \" \")\n            }\n            <div>{props.move.operator}</div>\n        </div>\n    )\n}\n\nfunction UndoMove(props) {\n    const btnEnabled = props.gameState === GameStateEnum.running;\n    return btnEnabled ? (\n            <i onClick={props.onClick} className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'green',\n                   cursor: 'pointer',\n               }}>undo</i>\n        ) :\n        (\n            <i className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'gray',\n               }}>undo</i>\n        )\n}\n\nfunction Undo(props) {\n    const btnEnabled = props.gameState === GameStateEnum.running;\n    return btnEnabled ?\n        (\n            <i onClick={props.onClick} className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'orange',\n                   cursor: 'pointer',\n                   display: props.gameState === GameStateEnum.running ? \"\" : \"none\"\n               }}>skip_previous</i>\n        )\n        :\n        (\n            <i className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'gray',\n               }}>skip_previous</i>\n        )\n\n}\n\nfunction Skip(props) {\n    const btnEnabled = props.gameState === GameStateEnum.running || props.gameState === GameStateEnum.started;\n    return btnEnabled ?\n        (\n            <i onClick={props.onClick}\n               className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'red',\n                   cursor: 'pointer',\n                   display: props.gameState === GameStateEnum.running || props.gameState === GameStateEnum.started ? \"\" : \"none\"\n               }}>skip_next</i>\n        )\n        :\n        (\n            <i\n               className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'gray',\n               }}>skip_next</i>\n        )\n\n}\n\nfunction Next(props) {\n    const btnEnabled = props.gameState === GameStateEnum.won || props.gameState === GameStateEnum.lost;\n    return btnEnabled ?\n        (\n            <i onClick={props.onClick}\n               className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'green',\n                   cursor: 'pointer',\n               }}>navigate_next</i>\n        )\n        :\n        (\n            <i\n                className=\"material-icons\"\n                style={{\n                    fontSize: 48,\n                    color: 'gray',\n                }}>navigate_next</i>\n        )\n}\n\nfunction GameButtons(props) {\n    return (\n        <div>\n            <Undo onClick={props.onUndo} gameState={props.gameState}/>\n            &nbsp;\n            <UndoMove onClick={props.onUndoMove} gameState={props.gameState}/>\n            &nbsp;\n            <Skip onClick={props.onSkip} gameState={props.gameState}/>\n            &nbsp;\n            <Next onClick={props.onNext} gameState={props.gameState}/>\n        </div>\n    )\n}\n\nfunction GameState(props) {\n    if (props.gameState === GameStateEnum.won) {\n        return (\n            <i className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'green',\n               }}>mood</i>\n        )\n    } else if (props.gameState === GameStateEnum.lost) {\n        return (\n            <i className=\"material-icons\"\n               style={{\n                   fontSize: 48,\n                   color: 'yellow',\n               }}>sentiment_very_dissatisfied</i>\n        )\n    } else {\n        return <div></div>\n    }\n}\n\nfunction Operator(props) {\n    function onClickOperator() {\n        props.onClickOperator(props.operator)\n    }\n\n    return (\n        <button onClick={onClickOperator} className=\"operatorButton\" type=\"button\">{props.operator} </button>\n    )\n}\n\nfunction Number(props) {\n    function onClickNumber() {\n        props.onClickNumber(props.number)\n    }\n\n    const btnColor = props.gameState === GameStateEnum.won ? \"green\" : props.gameState === GameStateEnum.lost ? \"red\" : \"black\";\n    return (\n        <button onClick={onClickNumber} className=\"numberButton\" type=\"button\"\n                style={{color: btnColor}}>{props.number.number}  </button>\n    )\n}\n\nfunction Operators(props) {\n    return (\n        props.operators.map(o =>\n            <Operator key={o} operator={o} onClickOperator={props.onClickOperator}/>\n        )\n    )\n}\n\nfunction Numbers(props) {\n    let numberKey = 0;\n    return (\n        props.numbers.map(n =>\n            <Number key={numberKey++} number={n} onClickNumber={props.onClickNumber} gameState={props.gameState}/>\n        )\n    )\n}\n\nclass App extends Component {\n\n    random = (min, max) => min + Math.floor(Math.random() * (max - min + 1));\n\n    init = () => {\n        this.chosenNumbers = [];\n        this.availableNumbers = [];\n        this.availableNumbers.push(new GameNumberType(this.random(1, 10), false));\n        this.availableNumbers.push(new GameNumberType(this.random(1, 10), false));\n        this.availableNumbers.push(new GameNumberType(this.random(1, 10), false));\n        this.availableNumbers.push(new GameNumberType(this.random(1, 10), false));\n\n        this.originalAvailableNumbers = [...this.availableNumbers];\n\n        this.availableOpeartors = [\"+\", \"-\", \"x\", \":\"];\n\n        // eslint-disable-next-line\n        this.state = {\n            chosenNumbers: [],\n            operator: null,\n            gameState: GameStateEnum.started,\n            availableNumbers: this.availableNumbers\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.init()\n    }\n\n    plusFunction = (a, b) => a + b;\n    minusFunction = (a, b) => a - b;\n    multiplyFunction = (a, b) => a * b;\n    divisionFunction = (a, b) => a / b;\n\n    mapOperatorToFunction = {\n        \"+\": this.plusFunction,\n        \"-\": this.minusFunction,\n        \"x\": this.multiplyFunction,\n        \":\": this.divisionFunction\n    }\n\n    executeMove = () => {\n        const move = this.state;\n        console.log(\"executeMove:\");\n        console.table(move);\n        if (!(move.operator && move.chosenNumbers.length === 2)) {\n            console.log(\"missing inputs\");\n            return;\n        }\n\n        console.log(\"all inputs set\");\n\n        const number1 = move.chosenNumbers[0];\n        const number2 = move.chosenNumbers[1];\n\n        const removeIndex1 = this.availableNumbers.indexOf(number1);\n        this.availableNumbers.splice(removeIndex1, 1);\n\n        const removeIndex2 = this.availableNumbers.indexOf(number2);\n        this.availableNumbers.splice(removeIndex2, 1);\n\n        const result = this.mapOperatorToFunction[move.operator](number1.number, number2.number)\n        console.log(\"result=\" + result);\n        this.availableNumbers.push(new GameNumberType(result, false));\n        this.chosenNumbers = [];\n\n        if (this.availableNumbers.length === 1) {\n            if (result === 24) {\n                console.log(\"You won\");\n                this.setState({\n                    chosenNumbers: this.chosenNumbers,\n                    gameState: GameStateEnum.won,\n                    availableNumbers: this.availableNumbers\n                });\n\n            } else {\n                console.log(\"You lost\");\n                this.setState({\n                    chosenNumbers: this.chosenNumbers,\n                    gameState: GameStateEnum.lost,\n                    availableNumbers: this.availableNumbers\n                });\n            }\n\n            return;\n        }\n\n        this.setState({\n            chosenNumbers: this.chosenNumbers,\n            operator: null,\n            gameState: GameStateEnum.running,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    onClickNumber = n => {\n        const move = this.state;\n        // console.log(\"Number clicked move: \" + move);\n        console.log(\"Number clicked: \" + n);\n        if (n.chosen) {\n            console.log(\"already chosen: \" + n);\n            return;\n        }\n        if (move.chosenNumbers.length >= 2) {\n            console.log(\"max nrs chosen\");\n            return;\n        }\n        n.chosen = true;\n        move.chosenNumbers.push(n);\n\n        this.setState({\n            chosenNumbers: move.chosenNumbers,\n            operator: move.operator,\n            gameState: GameStateEnum.running,\n            availableNumbers: this.availableNumbers\n        }, this.executeMove);\n        console.log(\"number chosen: \" + n.n);\n    }\n\n    onUndoMove = () => {\n        this.availableNumbers.forEach(n => n.chosen = false);\n        this.chosenNumbers = [];\n        this.setState({\n            chosenNumbers: this.chosenNumbers,\n            operator: null,\n            gameState: this.availableNumbers.length === this.originalAvailableNumbers ? GameStateEnum.started : GameStateEnum.running,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    onUndo = () => {\n        this.availableNumbers = [...this.originalAvailableNumbers];\n        this.onUndoMove()\n    }\n\n    onClickOperator = operator => {\n        const move = this.state;\n        console.log(\"operator clicked: \" + operator);\n        this.setState({\n            chosenNumbers: move.chosenNumbers,\n            operator: operator,\n            gameState: GameStateEnum.running,\n            availableNumbers: this.availableNumbers\n        }, this.executeMove);\n        console.log(\"operator=\" + operator);\n\n    }\n\n    onSkip = () => {\n        this.init()\n        this.setState({\n            chosenNumbers: [],\n            operator: null,\n            gameState: GameStateEnum.started,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    onNext = () => {\n        this.init()\n        this.setState({\n            chosenNumbers: [],\n            gameState: GameStateEnum.started,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <p/>\n                <Numbers numbers={this.state.availableNumbers} onClickNumber={this.onClickNumber}\n                         gameState={this.state.gameState}/>\n\n                <p/>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n                <Operators operators={this.availableOpeartors} onClickOperator={this.onClickOperator}/>\n\n                <GameButtons onUndo={this.onUndo} onUndoMove={this.onUndoMove} onSkip={this.onSkip} onNext={this.onNext}\n                             gameState={this.state.gameState}/>\n                <Trace move={this.state}/>\n                <GameState gameState={this.state.gameState}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n/*\noverslaan -1 punt\nwinnen +3\nverliezen -2\nopnieuw proberen 0,\n    winnen: +1, max 2 keer opnieuw proberen\n    verliezen: -2\ntimer:\n */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}