{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Trace","props","move","number1","operator","number2","UndoMove","onClick","className","style","fontSize","color","cursor","Undo","Skip","Next","display","gameState","GameButtons","onUndo","onUndoMove","onSkip","onNext","GameState","Operator","onClickOperator","type","Number","onClickNumber","number","Operators","operators","map","o","key","Numbers","numberKey","numbers","n","App","random","min","max","Math","floor","init","availableNumbers","push","originalAvailableNumbers","availableOpeartors","state","plusFunction","a","b","minusFunction","multiplyFunction","divisionFunction","mapOperatorToFunction","executeMove","console","log","table","removeIndex1","indexOf","splice","removeIndex2","result","length","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8357a6d1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nfunction Trace(props) {\n    return (\n        <div>Trace: {props.move.number1} {props.move.operator} {props.move.number2}</div>\n    )\n}\n\nfunction UndoMove(props) {\n    return (\n        <i onClick={props.onClick} className=\"material-icons\"\n                style={{fontSize: 48, color: 'green', cursor: 'pointer'}}>undo</i>\n    )\n}\n\nfunction Undo(props) {\n    return (\n        <i onClick={props.onClick} className=\"material-icons\"\n                style={{fontSize: 48, color: 'orange', cursor: 'pointer'}}>skip_previous</i>\n    )\n}\n\nfunction Skip(props) {\n    return (\n        <i onClick={props.onClick}\n           className=\"material-icons\"\n           style={{fontSize: 48, color: 'red', cursor: 'pointer'}}>skip_next</i>\n    )\n}\n\nfunction Next(props) {\n    return (\n        <i onClick={props.onClick}\n           className=\"material-icons\"\n           style={{fontSize: 48, color: 'green', cursor: 'pointer', display: props.gameState ? \"\" : \"none\"}}>navigate_next</i>\n    )\n}\n\nfunction GameButtons(props) {\n    return (\n        <div>\n            <Undo onClick={props.onUndo}/>\n            &nbsp;\n            <UndoMove onClick={props.onUndoMove}/>\n            &nbsp;\n            <Skip onClick={props.onSkip}/>\n            &nbsp;\n            <Next onClick={props.onNext} gameState={props.gameState}/>\n        </div>\n    )\n}\n\nfunction GameState(props) {\n    return (\n        <div>{props.gameState ? props.gameState : \"\"}</div>\n    )\n}\n\nfunction Operator(props) {\n    function onClickOperator() {\n        props.onClickOperator(props.operator)\n    }\n\n    return (\n        <button onClick={onClickOperator} className=\"operatorButton\" type=\"button\">{props.operator}</button>\n    )\n}\n\nfunction Number(props) {\n    function onClickNumber() {\n        props.onClickNumber(props.number)\n    }\n\n    return (\n        <button onClick={onClickNumber} className=\"numberButton\" type=\"button\">{props.number}</button>\n    )\n}\n\nfunction Operators(props) {\n    return (\n        props.operators.map(o =>\n            <Operator key={o} operator={o} onClickOperator={props.onClickOperator}/>\n        )\n    )\n}\n\nfunction Numbers(props) {\n    let numberKey = 0;\n    return (\n        props.numbers.map(n =>\n            <Number key={numberKey++} number={n} onClickNumber={props.onClickNumber}/>\n        )\n    )\n}\n\nclass App extends Component {\n\n    random = (min, max) => min + Math.floor(Math.random() * (max - min + 1));\n\n    init = () => {\n        this.availableNumbers = [];\n        this.availableNumbers.push(this.random(1, 10))\n        this.availableNumbers.push(this.random(1, 10))\n        this.availableNumbers.push(this.random(1, 10))\n        this.availableNumbers.push(this.random(1, 10))\n\n        this.originalAvailableNumbers = [...this.availableNumbers];\n\n        this.availableOpeartors = [\"+\", \"-\", \"x\", \":\"];\n\n        this.state = {\n            number1: null,\n            operator: null,\n            number2: null,\n            availableNumbers: this.availableNumbers\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.init()\n    }\n\n    plusFunction = (a, b) => a + b;\n    minusFunction = (a, b) => a - b;\n    multiplyFunction = (a, b) => a * b;\n    divisionFunction = (a, b) => a / b;\n\n    mapOperatorToFunction = {\n        \"+\": this.plusFunction,\n        \"-\": this.minusFunction,\n        \"x\": this.multiplyFunction,\n        \":\": this.divisionFunction\n    }\n\n    executeMove = () => {\n        const move = this.state;\n        console.log(\"executeMove:\");\n        console.table(move);\n        if (!(move.operator && move.number1 && move.number2)) {\n            console.log(\"missing inputs\");\n            return;\n        }\n\n        console.log(\"all inputs set\");\n\n        const removeIndex1 = this.availableNumbers.indexOf(move.number1);\n        this.availableNumbers.splice(removeIndex1, 1);\n        const removeIndex2 = this.availableNumbers.indexOf(move.number2);\n        this.availableNumbers.splice(removeIndex2, 1);\n\n        const result = this.mapOperatorToFunction[move.operator](move.number1, move.number2)\n        console.log(\"result=\" + result);\n        if (this.availableNumbers.length === 0) {\n            if (result === 24) {\n                console.log(\"You won\");\n                this.setState({\n                    gameState: \"won\"\n                });\n\n            } else {\n                console.log(\"You lost\");\n                this.setState({\n                    gameState: \"lost\"\n                });\n            }\n\n            return;\n        }\n\n        this.availableNumbers.push(result);\n        this.setState({\n            number1: null,\n            number2: null,\n            operator: null,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    onClickNumber = n => {\n        const move = this.state;\n        // console.log(\"Number clicked move: \" + move);\n        console.log(\"Number clicked: \" + n);\n        if (!move.number1) {\n            this.setState({\n                number1: n,\n                number2: move.number2,\n                operator: move.operator,\n                availableNumbers: this.availableNumbers\n            }, this.executeMove);\n            console.log(\"number1\");\n        } else if (!move.number2) {\n            this.setState({\n                number1: move.number1,\n                number2: n,\n                operator: move.operator,\n                availableNumbers: this.availableNumbers\n            }, this.executeMove);\n            console.log(\"number2\");\n        }\n    }\n\n    onUndoMove = () => {\n        this.setState({\n            number1: null,\n            number2: null,\n            operator: null,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    onUndo = () => {\n        this.availableNumbers = [...this.originalAvailableNumbers];\n        this.onUndoMove()\n    }\n\n    onClickOperator = operator => {\n        const move = this.state;\n        console.log(\"operator clicked: \" + operator);\n        this.setState({\n            number1: move.number1,\n            number2: move.number2,\n            operator: operator,\n            availableNumbers: this.availableNumbers\n        }, this.executeMove);\n        console.log(\"operator=\" + operator);\n\n    }\n\n    onSkip= () => {\n        this.init()\n        this.setState({\n            number1: null,\n            number2: null,\n            operator: null,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    onNext= () => {\n        this.init()\n        this.setState({\n            number1: null,\n            number2: null,\n            operator: null,\n            gameState: null,\n            availableNumbers: this.availableNumbers\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <p/>\n                <Numbers numbers={this.state.availableNumbers} onClickNumber={this.onClickNumber}/>\n\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n                <Operators operators={this.availableOpeartors} onClickOperator={this.onClickOperator}/>\n\n                <GameButtons onUndo={this.onUndo} onUndoMove={this.onUndoMove} onSkip={this.onSkip} onNext={this.onNext} gameState={this.state.gameState}/>\n                <Trace move={this.state} />\n                <GameState gameState={this.state.gameState}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n/*\noverslaan -1 punt\nwinnen +3\nverliezen -2\nopnieuw proberen 0,\n    winnen: +1, max 2 keer opnieuw proberen\n    verliezen: -2\ntimer:\n */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}